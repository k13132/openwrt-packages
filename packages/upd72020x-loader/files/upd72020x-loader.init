#!/bin/sh /etc/rc.common

START=15

FW_PATH=/lib/firmware/

UPD72020X_CMD=/usr/sbin/upd72020x-load
UPD72020X_FW=${FW_PATH}/K2013080.mem

boot() {

    # test if loader and firmware can be found
    if ! [ -x "$UPD72020X_CMD" ]; then
        echo "upd72020x loader not found at $UPD72020X_CMD"

            exit 1
    fi
    if ! [ -r "$UPD72020X_FW" ]; then
        echo "upd72020x firmware not found at $UPD72020X_FW"

            exit 2
    fi

    lspci -m | egrep "uPD720201|uPD720202" | while read device trailer; do
        if ! dmesg | grep "0000:$device" | tail -n 1 | grep -e "-110" > /dev/null; then
                echo ">> not affected, device got up normally"
                continue # not affected, device got up normally
        fi

            # attempt to avoid kernel interference on upload process
            if [ -e /sys/bus/pci/drivers/xhci_hcd/unbind ]; then
                    echo -n 0000:$device > /sys/bus/pci/drivers/xhci_hcd/unbind
            fi

            bus=$( echo "$device" | cut -d : -f 1)
            dev=$( echo "$device" | cut -d : -f 2 | cut -d . -f 1)
            fun=$( echo "$device" | cut -d : -f 2 | cut -d . -f 2)

            # upload to RAM only, do not write EEPROM
            "$UPD72020X_CMD" -u -b 0x$bus -d 0x$dev -f 0x$fun -i "$UPD72020X_FW"

            # revert change
            if [ -e /sys/bus/pci/drivers/xhci_hcd/unbind ]; then
                    echo -n 0000:$device > /sys/bus/pci/drivers/xhci_hcd/bind
            fi

            sleep 2

            echo 1 > "/sys/bus/pci/devices/0000:$device/remove"
    done

    sleep 1

    echo 1 > /sys/bus/pci/rescan
}